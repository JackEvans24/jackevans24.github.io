// Custom Theming for Angular Material
@use '@angular/material' as mat;
// For more information: https://material.angular.io/guide/theming
@import '@angular/material/theming';
// Plus imports for other components in your app.
@import 'material-palettes';

// Custom typography rules
$my-custom-typography-config: mat.define-legacy-typography-config($font-family: 'Open Sans',
    $display-4: mat.define-typography-level('93px', $letter-spacing: -1.5px, $font-family: 'Comfortaa'),
    $display-3: mat.define-typography-level('58px', $letter-spacing: -0.5px, $font-family: 'Comfortaa'),
    $display-2: mat.define-typography-level('46px', $font-family: 'Comfortaa'),
    $display-1: mat.define-typography-level('33px', $letter-spacing: 0.25px, $font-family: 'Comfortaa'),
    $headline: mat.define-typography-level('23px', $font-family: 'Comfortaa'),
    $title: mat.define-typography-level('19px', $letter-spacing: 0.15px, $font-family: 'Comfortaa'),
    $subheading-2: mat.define-typography-level('15px', $letter-spacing: 0.15px, $font-family: 'Comfortaa'),
    $subheading-1: mat.define-typography-level('13px', $letter-spacing: 0.1px, $font-family: 'Comfortaa'),
  );

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy($my-custom-typography-config);`
@include mat.all-legacy-component-typographies($my-custom-typography-config);
@include mat.legacy-core();

// Use this to quickly switch between themes
$mat-primary: $mat-primary-green;

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$jevans-space-primary: mat.define-palette($mat-primary);

// The warn palette is optional (defaults to red).
$jevans-space-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$jevans-space-theme: mat.define-dark-theme((color: (primary: $jevans-space-primary,
        accent: $jevans-space-primary,
        warn: $jevans-space-warn,
      )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-legacy-component-themes($jevans-space-theme);

$card-background: #404040;
$card-background-hover: #444444;
$card-background-contrast: #505050;
$card-shadow: 0px 0px 6px 2px #20202088;

$contrast-green: mat.get-color-from-palette($mat-primary, 300);
$primary-green: mat.get-color-from-palette($mat-primary, 600);